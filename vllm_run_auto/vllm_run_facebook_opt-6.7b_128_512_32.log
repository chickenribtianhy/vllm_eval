INFO 07-07 10:49:47 [__init__.py:244] Automatically detected platform cuda.
benchmarking facebook_opt-6.7b_prompt128_gen512_bs32
INFO 07-07 10:49:56 [config.py:823] This model supports multiple tasks: {'classify', 'score', 'reward', 'embed', 'generate'}. Defaulting to 'generate'.
INFO 07-07 10:49:56 [llm_engine.py:230] Initializing a V0 LLM engine (v0.9.1) with config: model='facebook/opt-6.7b', speculative_config=None, tokenizer='facebook/opt-6.7b', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config={}, tokenizer_revision=None, trust_remote_code=False, dtype=torch.float16, max_seq_len=2048, download_dir=None, load_format=LoadFormat.AUTO, tensor_parallel_size=1, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto,  device_config=cuda, decoding_config=DecodingConfig(backend='auto', disable_fallback=False, disable_any_whitespace=False, disable_additional_properties=False, reasoning_backend=''), observability_config=ObservabilityConfig(show_hidden_metrics_for_version=None, otlp_traces_endpoint=None, collect_detailed_traces=None), seed=None, served_model_name=facebook/opt-6.7b, num_scheduler_steps=1, multi_step_stream_outputs=True, enable_prefix_caching=None, chunked_prefill_enabled=False, use_async_output_proc=True, pooler_config=None, compilation_config={"level":0,"debug_dump_path":"","cache_dir":"","backend":"","custom_ops":[],"splitting_ops":[],"use_inductor":true,"compile_sizes":[],"inductor_compile_config":{"enable_auto_functionalized_v2":false},"inductor_passes":{},"use_cudagraph":true,"cudagraph_num_of_warmups":0,"cudagraph_capture_sizes":[32,24,16,8,4,2,1],"cudagraph_copy_inputs":false,"full_cuda_graph":false,"max_capture_size":32,"local_cache_dir":null}, use_cached_outputs=False, 
INFO 07-07 10:49:58 [cuda.py:275] Cannot use FlashAttention-2 backend for Volta and Turing GPUs.
INFO 07-07 10:49:58 [cuda.py:324] Using XFormers backend.
INFO 07-07 10:49:58 [parallel_state.py:1065] rank 0 in world size 1 is assigned as DP rank 0, PP rank 0, TP rank 0, EP rank 0
INFO 07-07 10:49:58 [model_runner.py:1171] Starting to load model facebook/opt-6.7b...
INFO 07-07 10:49:59 [weight_utils.py:292] Using model weights format ['*.bin']
Loading pt checkpoint shards:   0% Completed | 0/2 [00:00<?, ?it/s]
Loading pt checkpoint shards:  50% Completed | 1/2 [00:08<00:08,  8.23s/it]
Loading pt checkpoint shards: 100% Completed | 2/2 [00:11<00:00,  5.03s/it]
Loading pt checkpoint shards: 100% Completed | 2/2 [00:11<00:00,  5.51s/it]

INFO 07-07 10:50:10 [default_loader.py:272] Loading weights took 11.01 seconds
INFO 07-07 10:50:10 [model_runner.py:1203] Model loading took 12.4037 GiB and 11.187617 seconds
INFO 07-07 10:50:12 [worker.py:294] Memory profiling takes 1.20 seconds
INFO 07-07 10:50:12 [worker.py:294] the current vLLM instance can use total_gpu_memory (15.77GiB) x gpu_memory_utilization (0.90) = 14.19GiB
INFO 07-07 10:50:12 [worker.py:294] model weights take 12.40GiB; non_torch_memory takes 0.07GiB; PyTorch activation peak memory takes 0.38GiB; the rest of the memory reserved for KV Cache is 1.33GiB.
INFO 07-07 10:50:12 [executor_base.py:113] # cuda blocks: 170, # CPU blocks: 6400
INFO 07-07 10:50:12 [executor_base.py:118] Maximum concurrency for 2048 tokens per request: 1.33x
INFO 07-07 10:50:41 [model_runner.py:1513] Capturing cudagraphs for decoding. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI. If out-of-memory error occurs during cudagraph capture, consider decreasing `gpu_memory_utilization` or switching to eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
Capturing CUDA graph shapes:   0%|          | 0/7 [00:00<?, ?it/s]Capturing CUDA graph shapes:  14%|█▍        | 1/7 [00:00<00:03,  1.68it/s]Capturing CUDA graph shapes:  29%|██▊       | 2/7 [00:01<00:02,  1.82it/s]Capturing CUDA graph shapes:  43%|████▎     | 3/7 [00:01<00:02,  1.80it/s]Capturing CUDA graph shapes:  57%|█████▋    | 4/7 [00:02<00:01,  1.88it/s]Capturing CUDA graph shapes:  71%|███████▏  | 5/7 [00:02<00:01,  1.93it/s]Capturing CUDA graph shapes:  86%|████████▌ | 6/7 [00:03<00:00,  1.96it/s]Capturing CUDA graph shapes: 100%|██████████| 7/7 [00:03<00:00,  1.96it/s]Capturing CUDA graph shapes: 100%|██████████| 7/7 [00:03<00:00,  1.91it/s]
INFO 07-07 10:50:45 [model_runner.py:1671] Graph capturing finished in 4 secs, took 0.08 GiB
INFO 07-07 10:50:45 [llm_engine.py:428] init engine (profile, create kv cache, warmup model) took 34.38 seconds
WARNING 07-07 10:50:45 [scheduler.py:1801] Sequence group 20 is preempted by PreemptionMode.SWAP mode because there is not enough KV cache space. This can affect the end-to-end performance. Increase gpu_memory_utilization or tensor_parallel_size to provide more KV cache memory. total_num_cumulative_preemption=1
INFO 07-07 10:50:50 [metrics.py:417] Avg prompt throughput: 459.8 tokens/s, Avg generation throughput: 510.7 tokens/s, Running: 9 reqs, Swapped: 12 reqs, Pending: 11 reqs, GPU KV cache usage: 95.3%, CPU KV cache usage: 2.3%.
INFO 07-07 10:50:55 [metrics.py:417] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 285.2 tokens/s, Running: 5 reqs, Swapped: 16 reqs, Pending: 11 reqs, GPU KV cache usage: 94.1%, CPU KV cache usage: 3.7%.
INFO 07-07 10:51:00 [metrics.py:417] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 256.4 tokens/s, Running: 9 reqs, Swapped: 8 reqs, Pending: 11 reqs, GPU KV cache usage: 93.5%, CPU KV cache usage: 2.5%.
INFO 07-07 10:51:05 [metrics.py:417] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 281.8 tokens/s, Running: 6 reqs, Swapped: 11 reqs, Pending: 11 reqs, GPU KV cache usage: 95.3%, CPU KV cache usage: 3.8%.
INFO 07-07 10:51:10 [metrics.py:417] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 219.0 tokens/s, Running: 6 reqs, Swapped: 8 reqs, Pending: 11 reqs, GPU KV cache usage: 98.8%, CPU KV cache usage: 2.9%.
INFO 07-07 10:51:15 [metrics.py:417] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 223.6 tokens/s, Running: 5 reqs, Swapped: 7 reqs, Pending: 11 reqs, GPU KV cache usage: 99.4%, CPU KV cache usage: 2.8%.
INFO 07-07 10:51:20 [metrics.py:417] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 199.8 tokens/s, Running: 5 reqs, Swapped: 2 reqs, Pending: 11 reqs, GPU KV cache usage: 91.2%, CPU KV cache usage: 0.8%.
WARNING 07-07 10:51:24 [scheduler.py:1801] Sequence group 24 is preempted by PreemptionMode.SWAP mode because there is not enough KV cache space. This can affect the end-to-end performance. Increase gpu_memory_utilization or tensor_parallel_size to provide more KV cache memory. total_num_cumulative_preemption=51
INFO 07-07 10:51:25 [metrics.py:417] Avg prompt throughput: 281.2 tokens/s, Avg generation throughput: 224.3 tokens/s, Running: 13 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 98.2%, CPU KV cache usage: 0.0%.
INFO 07-07 10:51:30 [metrics.py:417] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 350.7 tokens/s, Running: 6 reqs, Swapped: 6 reqs, Pending: 0 reqs, GPU KV cache usage: 91.2%, CPU KV cache usage: 1.3%.
INFO 07-07 10:51:35 [metrics.py:417] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 251.1 tokens/s, Running: 5 reqs, Swapped: 6 reqs, Pending: 0 reqs, GPU KV cache usage: 96.5%, CPU KV cache usage: 1.7%.
INFO 07-07 10:51:40 [metrics.py:417] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 249.0 tokens/s, Running: 6 reqs, Swapped: 1 reqs, Pending: 0 reqs, GPU KV cache usage: 98.8%, CPU KV cache usage: 0.4%.
INFO 07-07 10:51:45 [metrics.py:417] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 204.7 tokens/s, Running: 4 reqs, Swapped: 2 reqs, Pending: 0 reqs, GPU KV cache usage: 88.8%, CPU KV cache usage: 1.0%.
INFO 07-07 10:51:50 [metrics.py:417] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 86.2 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 22.9%, CPU KV cache usage: 0.0%.
[rank0]:[W707 10:51:51.133047304 ProcessGroupNCCL.cpp:1476] Warning: WARNING: destroy_process_group() was not called before program exit, which can leak resources. For more info, please see https://pytorch.org/docs/stable/distributed.html#shutdown (function operator())
