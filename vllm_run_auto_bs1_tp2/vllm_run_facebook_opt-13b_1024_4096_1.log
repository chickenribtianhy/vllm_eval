INFO 08-15 15:03:09 [__init__.py:243] Automatically detected platform cuda.
benchmarking facebook_opt-13b_prompt1024_gen4096_bs1
kv cache size per request: 3.90625 GB
offloading 1 GB model weights
INFO 08-15 15:03:13 [__init__.py:31] Available plugins for group vllm.general_plugins:
INFO 08-15 15:03:13 [__init__.py:33] - lora_filesystem_resolver -> vllm.plugins.lora_resolvers.filesystem_resolver:register_filesystem_resolver
INFO 08-15 15:03:13 [__init__.py:36] All plugins in this group will be loaded. Set `VLLM_PLUGINS` to control which plugins to load.
INFO 08-15 15:03:24 [config.py:793] This model supports multiple tasks: {'score', 'classify', 'generate', 'reward', 'embed'}. Defaulting to 'generate'.
INFO 08-15 15:03:24 [config.py:1875] Defaulting to use mp for distributed inference
INFO 08-15 15:03:24 [llm_engine.py:230] Initializing a V0 LLM engine (v0.9.0.2.dev1+g0755d3cc1) with config: model='facebook/opt-13b', speculative_config=None, tokenizer='facebook/opt-13b', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config={}, tokenizer_revision=None, trust_remote_code=False, dtype=torch.float16, max_seq_len=5120, download_dir=None, load_format=LoadFormat.DUMMY, tensor_parallel_size=2, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto,  device_config=cuda, decoding_config=DecodingConfig(backend='auto', disable_fallback=False, disable_any_whitespace=False, disable_additional_properties=False, reasoning_backend=''), observability_config=ObservabilityConfig(show_hidden_metrics_for_version=None, otlp_traces_endpoint=None, collect_detailed_traces=None), seed=None, served_model_name=facebook/opt-13b, num_scheduler_steps=1, multi_step_stream_outputs=True, enable_prefix_caching=None, chunked_prefill_enabled=False, use_async_output_proc=True, pooler_config=None, compilation_config={"compile_sizes": [], "inductor_compile_config": {"enable_auto_functionalized_v2": false}, "cudagraph_capture_sizes": [32, 24, 16, 8, 4, 2, 1], "max_capture_size": 32}, use_cached_outputs=False, 
huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...
To disable this warning, you can either:
	- Avoid using `tokenizers` before the fork if possible
	- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)
[1;36m(VllmWorkerProcess pid=44083)[0;0m INFO 08-15 15:03:26 [multiproc_worker_utils.py:225] Worker ready; awaiting tasks
[1;36m(VllmWorkerProcess pid=44083)[0;0m INFO 08-15 15:03:27 [cuda.py:240] Cannot use FlashAttention-2 backend for Volta and Turing GPUs.
[1;36m(VllmWorkerProcess pid=44083)[0;0m INFO 08-15 15:03:27 [cuda.py:289] Using XFormers backend.
INFO 08-15 15:03:27 [cuda.py:240] Cannot use FlashAttention-2 backend for Volta and Turing GPUs.
INFO 08-15 15:03:27 [cuda.py:289] Using XFormers backend.
INFO 08-15 15:03:28 [utils.py:1077] Found nccl from library libnccl.so.2
[1;36m(VllmWorkerProcess pid=44083)[0;0m INFO 08-15 15:03:28 [utils.py:1077] Found nccl from library libnccl.so.2
[1;36m(VllmWorkerProcess pid=44083)[0;0m INFO 08-15 15:03:28 [pynccl.py:69] vLLM is using nccl==2.26.2
INFO 08-15 15:03:28 [pynccl.py:69] vLLM is using nccl==2.26.2
INFO 08-15 15:03:28 [custom_all_reduce_utils.py:245] reading GPU P2P access cache from /home/ubuntu/.cache/vllm/gpu_p2p_access_cache_for_0,1.json
[1;36m(VllmWorkerProcess pid=44083)[0;0m INFO 08-15 15:03:28 [custom_all_reduce_utils.py:245] reading GPU P2P access cache from /home/ubuntu/.cache/vllm/gpu_p2p_access_cache_for_0,1.json
WARNING 08-15 15:03:28 [custom_all_reduce.py:146] Custom allreduce is disabled because your platform lacks GPU P2P capability or P2P test failed. To silence this warning, specify disable_custom_all_reduce=True explicitly.
[1;36m(VllmWorkerProcess pid=44083)[0;0m WARNING 08-15 15:03:28 [custom_all_reduce.py:146] Custom allreduce is disabled because your platform lacks GPU P2P capability or P2P test failed. To silence this warning, specify disable_custom_all_reduce=True explicitly.
INFO 08-15 15:03:28 [shm_broadcast.py:250] vLLM message queue communication handle: Handle(local_reader_ranks=[1], buffer_handle=(1, 4194304, 6, 'psm_1d29c5db'), local_subscribe_addr='ipc:///tmp/e170f7f2-b7af-4b88-9297-2669ab206929', remote_subscribe_addr=None, remote_addr_ipv6=False)
INFO 08-15 15:03:28 [parallel_state.py:1064] rank 0 in world size 2 is assigned as DP rank 0, PP rank 0, TP rank 0, EP rank 0
[1;36m(VllmWorkerProcess pid=44083)[0;0m INFO 08-15 15:03:28 [parallel_state.py:1064] rank 1 in world size 2 is assigned as DP rank 0, PP rank 0, TP rank 1, EP rank 1
INFO 08-15 15:03:28 [model_runner.py:1170] Starting to load model facebook/opt-13b...
[1;36m(VllmWorkerProcess pid=44083)[0;0m INFO 08-15 15:03:28 [model_runner.py:1170] Starting to load model facebook/opt-13b...
INFO 08-15 15:03:33 [model_runner.py:1202] Model loading took 11.0074 GiB and 5.108935 seconds
[1;36m(VllmWorkerProcess pid=44083)[0;0m INFO 08-15 15:03:33 [model_runner.py:1202] Model loading took 11.0074 GiB and 5.136802 seconds
[1;36m(VllmWorkerProcess pid=44083)[0;0m INFO 08-15 15:03:37 [worker.py:291] Memory profiling takes 3.26 seconds
[1;36m(VllmWorkerProcess pid=44083)[0;0m INFO 08-15 15:03:37 [worker.py:291] the current vLLM instance can use total_gpu_memory (15.77GiB) x gpu_memory_utilization (0.90) = 14.19GiB
[1;36m(VllmWorkerProcess pid=44083)[0;0m INFO 08-15 15:03:37 [worker.py:291] model weights take 11.01GiB; non_torch_memory takes 0.17GiB; PyTorch activation peak memory takes 0.70GiB; the rest of the memory reserved for KV Cache is 2.32GiB.
INFO 08-15 15:03:37 [worker.py:291] Memory profiling takes 3.37 seconds
INFO 08-15 15:03:37 [worker.py:291] the current vLLM instance can use total_gpu_memory (15.77GiB) x gpu_memory_utilization (0.90) = 14.19GiB
INFO 08-15 15:03:37 [worker.py:291] model weights take 11.01GiB; non_torch_memory takes 0.17GiB; PyTorch activation peak memory takes 0.70GiB; the rest of the memory reserved for KV Cache is 2.32GiB.
INFO 08-15 15:03:37 [executor_base.py:112] # cuda blocks: 380, # CPU blocks: 0
INFO 08-15 15:03:37 [executor_base.py:117] Maximum concurrency for 5120 tokens per request: 1.19x
INFO 08-15 15:03:37 [model_runner.py:1512] Capturing cudagraphs for decoding. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI. If out-of-memory error occurs during cudagraph capture, consider decreasing `gpu_memory_utilization` or switching to eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
[1;36m(VllmWorkerProcess pid=44083)[0;0m INFO 08-15 15:03:37 [model_runner.py:1512] Capturing cudagraphs for decoding. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI. If out-of-memory error occurs during cudagraph capture, consider decreasing `gpu_memory_utilization` or switching to eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
Capturing CUDA graph shapes:   0%|          | 0/7 [00:00<?, ?it/s]Capturing CUDA graph shapes:  14%|█▍        | 1/7 [00:00<00:04,  1.22it/s]Capturing CUDA graph shapes:  29%|██▊       | 2/7 [00:01<00:04,  1.24it/s]Capturing CUDA graph shapes:  43%|████▎     | 3/7 [00:02<00:03,  1.25it/s]Capturing CUDA graph shapes:  57%|█████▋    | 4/7 [00:03<00:02,  1.26it/s]Capturing CUDA graph shapes:  71%|███████▏  | 5/7 [00:03<00:01,  1.27it/s]Capturing CUDA graph shapes:  86%|████████▌ | 6/7 [00:04<00:00,  1.29it/s]Capturing CUDA graph shapes: 100%|██████████| 7/7 [00:05<00:00,  1.27it/s]Capturing CUDA graph shapes: 100%|██████████| 7/7 [00:05<00:00,  1.26it/s]
INFO 08-15 15:03:43 [model_runner.py:1670] Graph capturing finished in 6 secs, took 0.39 GiB
[1;36m(VllmWorkerProcess pid=44083)[0;0m INFO 08-15 15:03:43 [model_runner.py:1670] Graph capturing finished in 6 secs, took 0.39 GiB
INFO 08-15 15:03:43 [llm_engine.py:428] init engine (profile, create kv cache, warmup model) took 9.38 seconds
INFO 08-15 15:03:48 [metrics.py:486] Avg prompt throughput: 200.55463 tokens/s, Avg generation throughput: 6.46319 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 17.63158%, CPU KV cache usage: 0.00000%.
INFO 08-15 15:03:53 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 7.22535 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 18.15789%, CPU KV cache usage: 0.00000%.
INFO 08-15 15:03:58 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 7.22285 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 18.68421%, CPU KV cache usage: 0.00000%.
INFO 08-15 15:04:03 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 7.22618 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 19.21053%, CPU KV cache usage: 0.00000%.
INFO 08-15 15:04:08 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 7.22131 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 20.00000%, CPU KV cache usage: 0.00000%.
INFO 08-15 15:04:14 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 7.22001 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 20.52632%, CPU KV cache usage: 0.00000%.
INFO 08-15 15:04:19 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 7.21782 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 21.05263%, CPU KV cache usage: 0.00000%.
INFO 08-15 15:04:24 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 7.22445 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 21.84211%, CPU KV cache usage: 0.00000%.
INFO 08-15 15:04:29 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 7.21823 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 22.36842%, CPU KV cache usage: 0.00000%.
INFO 08-15 15:04:34 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 7.22390 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 22.89474%, CPU KV cache usage: 0.00000%.
INFO 08-15 15:04:39 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 7.22181 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 23.68421%, CPU KV cache usage: 0.00000%.
INFO 08-15 15:04:44 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 7.22382 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 24.21053%, CPU KV cache usage: 0.00000%.
INFO 08-15 15:04:49 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 7.22192 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 24.73684%, CPU KV cache usage: 0.00000%.
INFO 08-15 15:04:55 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 7.22304 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 25.52632%, CPU KV cache usage: 0.00000%.
INFO 08-15 15:05:00 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 7.18876 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 26.05263%, CPU KV cache usage: 0.00000%.
INFO 08-15 15:05:05 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 7.18226 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 26.57895%, CPU KV cache usage: 0.00000%.
INFO 08-15 15:05:10 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 7.17747 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 27.10526%, CPU KV cache usage: 0.00000%.
INFO 08-15 15:05:15 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 7.19026 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 27.89474%, CPU KV cache usage: 0.00000%.
INFO 08-15 15:05:20 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 7.21875 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 28.42105%, CPU KV cache usage: 0.00000%.
INFO 08-15 15:05:25 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 7.22142 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 28.94737%, CPU KV cache usage: 0.00000%.
INFO 08-15 15:05:30 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 7.21779 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 29.73684%, CPU KV cache usage: 0.00000%.
INFO 08-15 15:05:35 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 7.21226 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 30.26316%, CPU KV cache usage: 0.00000%.
INFO 08-15 15:05:40 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 7.21399 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 30.78947%, CPU KV cache usage: 0.00000%.
INFO 08-15 15:05:45 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 7.21429 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 31.31579%, CPU KV cache usage: 0.00000%.
[1;36m(VllmWorkerProcess pid=44083)[0;0m INFO 08-15 15:05:47 [multiproc_worker_utils.py:259] Worker exiting
[rank0]: Traceback (most recent call last):
[rank0]:   File "/home/ubuntu/vllm_eval/main.py", line 119, in <module>
[rank0]:     benchmark(args.model, args.prompt_len, args.gen_len, args.batch_size, args.tensor_parallelism)
[rank0]:   File "/home/ubuntu/vllm_eval/main.py", line 67, in benchmark
[rank0]:     responses = llm.generate(prompts, sampling_params)
[rank0]:                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/ubuntu/vllm/vllm/utils.py", line 1218, in inner
[rank0]:     return fn(*args, **kwargs)
[rank0]:            ^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/ubuntu/vllm/vllm/entrypoints/llm.py", line 481, in generate
[rank0]:     outputs = self._run_engine(use_tqdm=use_tqdm)
[rank0]:               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/ubuntu/vllm/vllm/entrypoints/llm.py", line 1476, in _run_engine
[rank0]:     step_outputs = self.llm_engine.step()
[rank0]:                    ^^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/ubuntu/vllm/vllm/engine/llm_engine.py", line 1393, in step
[rank0]:     outputs = self.model_executor.execute_model(
[rank0]:               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/ubuntu/vllm/vllm/executor/executor_base.py", line 299, in execute_model
[rank0]:     driver_outputs = self._driver_execute_model(execute_model_req)
[rank0]:                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/ubuntu/vllm/vllm/executor/mp_distributed_executor.py", line 144, in _driver_execute_model
[rank0]:     return self.driver_worker.execute_model(execute_model_req)
[rank0]:            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/ubuntu/vllm/vllm/worker/worker_base.py", line 420, in execute_model
[rank0]:     output = self.model_runner.execute_model(
[rank0]:              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/ubuntu/.venv/lib/python3.12/site-packages/torch/utils/_contextlib.py", line 116, in decorate_context
[rank0]:     return func(*args, **kwargs)
[rank0]:            ^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/ubuntu/vllm/vllm/worker/model_runner.py", line 1843, in execute_model
[rank0]:     hidden_or_intermediate_states = model_executable(
[rank0]:                                     ^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/ubuntu/.venv/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1751, in _wrapped_call_impl
[rank0]:     return self._call_impl(*args, **kwargs)
[rank0]:            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/ubuntu/.venv/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1762, in _call_impl
[rank0]:     return forward_call(*args, **kwargs)
[rank0]:            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/ubuntu/vllm/vllm/worker/model_runner.py", line 2173, in forward
[rank0]:     self.graph.replay()
[rank0]:   File "/home/ubuntu/.venv/lib/python3.12/site-packages/torch/cuda/graphs.py", line 88, in replay
[rank0]:     super().replay()
[rank0]: KeyboardInterrupt
INFO 08-15 15:05:48 [multiproc_worker_utils.py:124] Killing local vLLM worker processes
/home/ubuntu/.local/share/uv/python/cpython-3.12.11-linux-x86_64-gnu/lib/python3.12/multiprocessing/resource_tracker.py:279: UserWarning: resource_tracker: There appear to be 1 leaked shared_memory objects to clean up at shutdown
  warnings.warn('resource_tracker: There appear to be %d '
[rank0]:[W815 15:05:48.335132828 ProcessGroupNCCL.cpp:1476] Warning: WARNING: destroy_process_group() was not called before program exit, which can leak resources. For more info, please see https://pytorch.org/docs/stable/distributed.html#shutdown (function operator())
