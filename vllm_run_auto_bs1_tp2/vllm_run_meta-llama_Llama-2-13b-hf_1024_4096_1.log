INFO 08-08 17:12:12 [__init__.py:244] Automatically detected platform cuda.
benchmarking meta-llama_Llama-2-13b-hf_prompt1024_gen4096_bs1
kv cache size per request: 3.90625 GB
offloading 1 GB model weights
INFO 08-08 17:12:22 [config.py:823] This model supports multiple tasks: {'score', 'generate', 'classify', 'embed', 'reward'}. Defaulting to 'generate'.
INFO 08-08 17:12:22 [config.py:1946] Defaulting to use mp for distributed inference
INFO 08-08 17:12:22 [llm_engine.py:230] Initializing a V0 LLM engine (v0.9.1) with config: model='meta-llama/Llama-2-13b-hf', speculative_config=None, tokenizer='meta-llama/Llama-2-13b-hf', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config={}, tokenizer_revision=None, trust_remote_code=False, dtype=torch.float16, max_seq_len=5120, download_dir=None, load_format=LoadFormat.DUMMY, tensor_parallel_size=2, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto,  device_config=cuda, decoding_config=DecodingConfig(backend='auto', disable_fallback=False, disable_any_whitespace=False, disable_additional_properties=False, reasoning_backend=''), observability_config=ObservabilityConfig(show_hidden_metrics_for_version=None, otlp_traces_endpoint=None, collect_detailed_traces=None), seed=None, served_model_name=meta-llama/Llama-2-13b-hf, num_scheduler_steps=1, multi_step_stream_outputs=True, enable_prefix_caching=None, chunked_prefill_enabled=False, use_async_output_proc=True, pooler_config=None, compilation_config={"level":0,"debug_dump_path":"","cache_dir":"","backend":"","custom_ops":[],"splitting_ops":[],"use_inductor":true,"compile_sizes":[],"inductor_compile_config":{"enable_auto_functionalized_v2":false},"inductor_passes":{},"use_cudagraph":true,"cudagraph_num_of_warmups":0,"cudagraph_capture_sizes":[32,24,16,8,4,2,1],"cudagraph_copy_inputs":false,"full_cuda_graph":false,"max_capture_size":32,"local_cache_dir":null}, use_cached_outputs=False, 
huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...
To disable this warning, you can either:
	- Avoid using `tokenizers` before the fork if possible
	- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)
[1;36m(VllmWorkerProcess pid=27542)[0;0m INFO 08-08 17:12:22 [multiproc_worker_utils.py:226] Worker ready; awaiting tasks
[1;36m(VllmWorkerProcess pid=27542)[0;0m INFO 08-08 17:12:23 [cuda.py:275] Cannot use FlashAttention-2 backend for Volta and Turing GPUs.
[1;36m(VllmWorkerProcess pid=27542)[0;0m INFO 08-08 17:12:23 [cuda.py:324] Using XFormers backend.
INFO 08-08 17:12:23 [cuda.py:275] Cannot use FlashAttention-2 backend for Volta and Turing GPUs.
INFO 08-08 17:12:23 [cuda.py:324] Using XFormers backend.
[1;36m(VllmWorkerProcess pid=27542)[0;0m INFO 08-08 17:12:24 [utils.py:1126] Found nccl from library libnccl.so.2
INFO 08-08 17:12:24 [utils.py:1126] Found nccl from library libnccl.so.2
[1;36m(VllmWorkerProcess pid=27542)[0;0m INFO 08-08 17:12:24 [pynccl.py:70] vLLM is using nccl==2.26.2
INFO 08-08 17:12:24 [pynccl.py:70] vLLM is using nccl==2.26.2
INFO 08-08 17:12:24 [custom_all_reduce_utils.py:246] reading GPU P2P access cache from /home/ubuntu/.cache/vllm/gpu_p2p_access_cache_for_0,1.json
[1;36m(VllmWorkerProcess pid=27542)[0;0m INFO 08-08 17:12:24 [custom_all_reduce_utils.py:246] reading GPU P2P access cache from /home/ubuntu/.cache/vllm/gpu_p2p_access_cache_for_0,1.json
WARNING 08-08 17:12:24 [custom_all_reduce.py:147] Custom allreduce is disabled because your platform lacks GPU P2P capability or P2P test failed. To silence this warning, specify disable_custom_all_reduce=True explicitly.
[1;36m(VllmWorkerProcess pid=27542)[0;0m WARNING 08-08 17:12:24 [custom_all_reduce.py:147] Custom allreduce is disabled because your platform lacks GPU P2P capability or P2P test failed. To silence this warning, specify disable_custom_all_reduce=True explicitly.
INFO 08-08 17:12:24 [shm_broadcast.py:289] vLLM message queue communication handle: Handle(local_reader_ranks=[1], buffer_handle=(1, 4194304, 6, 'psm_b19ffad2'), local_subscribe_addr='ipc:///tmp/af76ed1b-aa62-4589-af00-835d2dc0490d', remote_subscribe_addr=None, remote_addr_ipv6=False)
[1;36m(VllmWorkerProcess pid=27542)[0;0m INFO 08-08 17:12:24 [parallel_state.py:1065] rank 1 in world size 2 is assigned as DP rank 0, PP rank 0, TP rank 1, EP rank 1
INFO 08-08 17:12:24 [parallel_state.py:1065] rank 0 in world size 2 is assigned as DP rank 0, PP rank 0, TP rank 0, EP rank 0
INFO 08-08 17:12:24 [model_runner.py:1171] Starting to load model meta-llama/Llama-2-13b-hf...
[1;36m(VllmWorkerProcess pid=27542)[0;0m INFO 08-08 17:12:24 [model_runner.py:1171] Starting to load model meta-llama/Llama-2-13b-hf...
INFO 08-08 17:12:31 [model_runner.py:1203] Model loading took 11.1320 GiB and 5.597191 seconds
[1;36m(VllmWorkerProcess pid=27542)[0;0m INFO 08-08 17:12:31 [model_runner.py:1203] Model loading took 11.1320 GiB and 5.615338 seconds
[1;36m(VllmWorkerProcess pid=27542)[0;0m INFO 08-08 17:12:34 [worker.py:294] Memory profiling takes 3.20 seconds
[1;36m(VllmWorkerProcess pid=27542)[0;0m INFO 08-08 17:12:34 [worker.py:294] the current vLLM instance can use total_gpu_memory (15.77GiB) x gpu_memory_utilization (0.90) = 14.19GiB
[1;36m(VllmWorkerProcess pid=27542)[0;0m INFO 08-08 17:12:34 [worker.py:294] model weights take 11.13GiB; non_torch_memory takes 0.17GiB; PyTorch activation peak memory takes 0.65GiB; the rest of the memory reserved for KV Cache is 2.24GiB.
INFO 08-08 17:12:34 [worker.py:294] Memory profiling takes 3.31 seconds
INFO 08-08 17:12:34 [worker.py:294] the current vLLM instance can use total_gpu_memory (15.77GiB) x gpu_memory_utilization (0.90) = 14.19GiB
INFO 08-08 17:12:34 [worker.py:294] model weights take 11.13GiB; non_torch_memory takes 0.17GiB; PyTorch activation peak memory takes 0.65GiB; the rest of the memory reserved for KV Cache is 2.24GiB.
INFO 08-08 17:12:34 [executor_base.py:113] # cuda blocks: 366, # CPU blocks: 0
INFO 08-08 17:12:34 [executor_base.py:118] Maximum concurrency for 5120 tokens per request: 1.14x
INFO 08-08 17:12:34 [model_runner.py:1513] Capturing cudagraphs for decoding. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI. If out-of-memory error occurs during cudagraph capture, consider decreasing `gpu_memory_utilization` or switching to eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
[1;36m(VllmWorkerProcess pid=27542)[0;0m INFO 08-08 17:12:34 [model_runner.py:1513] Capturing cudagraphs for decoding. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI. If out-of-memory error occurs during cudagraph capture, consider decreasing `gpu_memory_utilization` or switching to eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
Capturing CUDA graph shapes:   0%|          | 0/7 [00:00<?, ?it/s]Capturing CUDA graph shapes:  14%|█▍        | 1/7 [00:00<00:04,  1.25it/s]Capturing CUDA graph shapes:  29%|██▊       | 2/7 [00:01<00:03,  1.26it/s]Capturing CUDA graph shapes:  43%|████▎     | 3/7 [00:02<00:03,  1.29it/s]Capturing CUDA graph shapes:  57%|█████▋    | 4/7 [00:03<00:02,  1.29it/s]Capturing CUDA graph shapes:  71%|███████▏  | 5/7 [00:03<00:01,  1.32it/s]Capturing CUDA graph shapes:  86%|████████▌ | 6/7 [00:04<00:00,  1.32it/s][1;36m(VllmWorkerProcess pid=27542)[0;0m INFO 08-08 17:12:40 [model_runner.py:1671] Graph capturing finished in 5 secs, took 0.39 GiB
Capturing CUDA graph shapes: 100%|██████████| 7/7 [00:05<00:00,  1.30it/s]Capturing CUDA graph shapes: 100%|██████████| 7/7 [00:05<00:00,  1.30it/s]
INFO 08-08 17:12:40 [model_runner.py:1671] Graph capturing finished in 5 secs, took 0.39 GiB
INFO 08-08 17:12:40 [llm_engine.py:428] init engine (profile, create kv cache, warmup model) took 9.12 seconds
INFO 08-08 17:12:45 [metrics.py:417] Avg prompt throughput: 204.4 tokens/s, Avg generation throughput: 6.2 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 18.0%, CPU KV cache usage: 0.0%.
INFO 08-08 17:12:50 [metrics.py:417] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 7.0 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 18.9%, CPU KV cache usage: 0.0%.
INFO 08-08 17:12:55 [metrics.py:417] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 7.0 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 19.4%, CPU KV cache usage: 0.0%.
INFO 08-08 17:13:00 [metrics.py:417] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 7.0 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 19.9%, CPU KV cache usage: 0.0%.
INFO 08-08 17:13:05 [metrics.py:417] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 7.0 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 20.5%, CPU KV cache usage: 0.0%.
INFO 08-08 17:13:10 [metrics.py:417] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 7.0 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 21.0%, CPU KV cache usage: 0.0%.
INFO 08-08 17:13:15 [metrics.py:417] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 7.0 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 21.9%, CPU KV cache usage: 0.0%.
INFO 08-08 17:13:20 [metrics.py:417] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 7.0 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 22.4%, CPU KV cache usage: 0.0%.
INFO 08-08 17:13:25 [metrics.py:417] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 7.0 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 23.0%, CPU KV cache usage: 0.0%.
INFO 08-08 17:13:30 [metrics.py:417] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 7.0 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 23.5%, CPU KV cache usage: 0.0%.
INFO 08-08 17:13:35 [metrics.py:417] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 7.0 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 24.0%, CPU KV cache usage: 0.0%.
INFO 08-08 17:13:40 [metrics.py:417] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 7.0 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 24.9%, CPU KV cache usage: 0.0%.
INFO 08-08 17:13:45 [metrics.py:417] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 7.0 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 25.4%, CPU KV cache usage: 0.0%.
[1;36m(VllmWorkerProcess pid=27542)[0;0m INFO 08-08 17:13:45 [multiproc_worker_utils.py:260] Worker exiting
[rank0]: Traceback (most recent call last):
[rank0]:   File "/home/ubuntu/vllm_eval/main.py", line 119, in <module>
[rank0]:     benchmark(args.model, args.prompt_len, args.gen_len, args.batch_size, args.tensor_parallelism)
[rank0]:   File "/home/ubuntu/vllm_eval/main.py", line 67, in benchmark
[rank0]:     responses = llm.generate(prompts, sampling_params)
[rank0]:                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/ubuntu/miniconda3/envs/vllm/lib/python3.12/site-packages/vllm/utils.py", line 1267, in inner
[rank0]:     return fn(*args, **kwargs)
[rank0]:            ^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/ubuntu/miniconda3/envs/vllm/lib/python3.12/site-packages/vllm/entrypoints/llm.py", line 474, in generate
[rank0]:     outputs = self._run_engine(use_tqdm=use_tqdm)
[rank0]:               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/ubuntu/miniconda3/envs/vllm/lib/python3.12/site-packages/vllm/entrypoints/llm.py", line 1517, in _run_engine
[rank0]:     step_outputs = self.llm_engine.step()
[rank0]:                    ^^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/ubuntu/miniconda3/envs/vllm/lib/python3.12/site-packages/vllm/engine/llm_engine.py", line 1352, in step
[rank0]:     outputs = self.model_executor.execute_model(
[rank0]:               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/ubuntu/miniconda3/envs/vllm/lib/python3.12/site-packages/vllm/executor/executor_base.py", line 300, in execute_model
[rank0]:     driver_outputs = self._driver_execute_model(execute_model_req)
[rank0]:                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/ubuntu/miniconda3/envs/vllm/lib/python3.12/site-packages/vllm/executor/mp_distributed_executor.py", line 145, in _driver_execute_model
[rank0]:     return self.driver_worker.execute_model(execute_model_req)
[rank0]:            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/ubuntu/miniconda3/envs/vllm/lib/python3.12/site-packages/vllm/worker/worker_base.py", line 421, in execute_model
[rank0]:     output = self.model_runner.execute_model(
[rank0]:              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/ubuntu/miniconda3/envs/vllm/lib/python3.12/site-packages/torch/utils/_contextlib.py", line 116, in decorate_context
[rank0]:     return func(*args, **kwargs)
[rank0]:            ^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/ubuntu/miniconda3/envs/vllm/lib/python3.12/site-packages/vllm/worker/model_runner.py", line 1844, in execute_model
[rank0]:     hidden_or_intermediate_states = model_executable(
[rank0]:                                     ^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/ubuntu/miniconda3/envs/vllm/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1751, in _wrapped_call_impl
[rank0]:     return self._call_impl(*args, **kwargs)
[rank0]:            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/ubuntu/miniconda3/envs/vllm/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1762, in _call_impl
[rank0]:     return forward_call(*args, **kwargs)
[rank0]:            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/ubuntu/miniconda3/envs/vllm/lib/python3.12/site-packages/vllm/worker/model_runner.py", line 2173, in forward
[rank0]:     self.graph.replay()
[rank0]:   File "/home/ubuntu/miniconda3/envs/vllm/lib/python3.12/site-packages/torch/cuda/graphs.py", line 88, in replay
[rank0]:     super().replay()
[rank0]: KeyboardInterrupt
/home/ubuntu/miniconda3/envs/vllm/lib/python3.12/multiprocessing/resource_tracker.py:279: UserWarning: resource_tracker: There appear to be 1 leaked shared_memory objects to clean up at shutdown
  warnings.warn('resource_tracker: There appear to be %d '
[rank0]:[W808 17:13:46.689278043 ProcessGroupNCCL.cpp:1476] Warning: WARNING: destroy_process_group() was not called before program exit, which can leak resources. For more info, please see https://pytorch.org/docs/stable/distributed.html#shutdown (function operator())
