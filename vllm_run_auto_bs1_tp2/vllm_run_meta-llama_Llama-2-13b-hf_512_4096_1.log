INFO 08-17 06:46:33 [__init__.py:243] Automatically detected platform cuda.
benchmarking meta-llama_Llama-2-13b-hf_prompt512_gen4096_bs1
kv cache size per request: 3.515625 GB
offloading 1 GB model weights
INFO 08-17 06:46:35 [__init__.py:31] Available plugins for group vllm.general_plugins:
INFO 08-17 06:46:35 [__init__.py:33] - lora_filesystem_resolver -> vllm.plugins.lora_resolvers.filesystem_resolver:register_filesystem_resolver
INFO 08-17 06:46:35 [__init__.py:36] All plugins in this group will be loaded. Set `VLLM_PLUGINS` to control which plugins to load.
INFO 08-17 06:46:42 [config.py:793] This model supports multiple tasks: {'generate', 'embed', 'score', 'reward', 'classify'}. Defaulting to 'generate'.
INFO 08-17 06:46:42 [config.py:1875] Defaulting to use mp for distributed inference
INFO 08-17 06:46:42 [llm_engine.py:230] Initializing a V0 LLM engine (v0.9.0.2.dev1+g0755d3cc1) with config: model='meta-llama/Llama-2-13b-hf', speculative_config=None, tokenizer='meta-llama/Llama-2-13b-hf', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config={}, tokenizer_revision=None, trust_remote_code=False, dtype=torch.float16, max_seq_len=4608, download_dir=None, load_format=LoadFormat.DUMMY, tensor_parallel_size=2, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto,  device_config=cuda, decoding_config=DecodingConfig(backend='auto', disable_fallback=False, disable_any_whitespace=False, disable_additional_properties=False, reasoning_backend=''), observability_config=ObservabilityConfig(show_hidden_metrics_for_version=None, otlp_traces_endpoint=None, collect_detailed_traces=None), seed=None, served_model_name=meta-llama/Llama-2-13b-hf, num_scheduler_steps=1, multi_step_stream_outputs=True, enable_prefix_caching=None, chunked_prefill_enabled=False, use_async_output_proc=True, pooler_config=None, compilation_config={"compile_sizes": [], "inductor_compile_config": {"enable_auto_functionalized_v2": false}, "cudagraph_capture_sizes": [32, 24, 16, 8, 4, 2, 1], "max_capture_size": 32}, use_cached_outputs=False, 
huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...
To disable this warning, you can either:
	- Avoid using `tokenizers` before the fork if possible
	- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)
[1;36m(VllmWorkerProcess pid=6499)[0;0m INFO 08-17 06:46:43 [multiproc_worker_utils.py:225] Worker ready; awaiting tasks
[1;36m(VllmWorkerProcess pid=6499)[0;0m INFO 08-17 06:46:44 [cuda.py:240] Cannot use FlashAttention-2 backend for Volta and Turing GPUs.
[1;36m(VllmWorkerProcess pid=6499)[0;0m INFO 08-17 06:46:44 [cuda.py:289] Using XFormers backend.
INFO 08-17 06:46:44 [cuda.py:240] Cannot use FlashAttention-2 backend for Volta and Turing GPUs.
INFO 08-17 06:46:44 [cuda.py:289] Using XFormers backend.
[1;36m(VllmWorkerProcess pid=6499)[0;0m INFO 08-17 06:46:45 [utils.py:1077] Found nccl from library libnccl.so.2
INFO 08-17 06:46:45 [utils.py:1077] Found nccl from library libnccl.so.2
INFO 08-17 06:46:45 [pynccl.py:69] vLLM is using nccl==2.26.2
[1;36m(VllmWorkerProcess pid=6499)[0;0m INFO 08-17 06:46:45 [pynccl.py:69] vLLM is using nccl==2.26.2
[1;36m(VllmWorkerProcess pid=6499)[0;0m INFO 08-17 06:46:45 [custom_all_reduce_utils.py:245] reading GPU P2P access cache from /home/ubuntu/.cache/vllm/gpu_p2p_access_cache_for_0,1.json
INFO 08-17 06:46:45 [custom_all_reduce_utils.py:245] reading GPU P2P access cache from /home/ubuntu/.cache/vllm/gpu_p2p_access_cache_for_0,1.json
[1;36m(VllmWorkerProcess pid=6499)[0;0m WARNING 08-17 06:46:45 [custom_all_reduce.py:146] Custom allreduce is disabled because your platform lacks GPU P2P capability or P2P test failed. To silence this warning, specify disable_custom_all_reduce=True explicitly.
WARNING 08-17 06:46:45 [custom_all_reduce.py:146] Custom allreduce is disabled because your platform lacks GPU P2P capability or P2P test failed. To silence this warning, specify disable_custom_all_reduce=True explicitly.
INFO 08-17 06:46:45 [shm_broadcast.py:250] vLLM message queue communication handle: Handle(local_reader_ranks=[1], buffer_handle=(1, 4194304, 6, 'psm_0a8a3246'), local_subscribe_addr='ipc:///tmp/91a57002-57ed-4db5-8400-c864a79855a5', remote_subscribe_addr=None, remote_addr_ipv6=False)
INFO 08-17 06:46:45 [parallel_state.py:1064] rank 0 in world size 2 is assigned as DP rank 0, PP rank 0, TP rank 0, EP rank 0
[1;36m(VllmWorkerProcess pid=6499)[0;0m INFO 08-17 06:46:45 [parallel_state.py:1064] rank 1 in world size 2 is assigned as DP rank 0, PP rank 0, TP rank 1, EP rank 1
INFO 08-17 06:46:45 [model_runner.py:1170] Starting to load model meta-llama/Llama-2-13b-hf...
[1;36m(VllmWorkerProcess pid=6499)[0;0m INFO 08-17 06:46:45 [model_runner.py:1170] Starting to load model meta-llama/Llama-2-13b-hf...
INFO 08-17 06:46:51 [model_runner.py:1202] Model loading took 11.1320 GiB and 5.756115 seconds
[1;36m(VllmWorkerProcess pid=6499)[0;0m INFO 08-17 06:46:51 [model_runner.py:1202] Model loading took 11.1320 GiB and 5.782268 seconds
[1;36m(VllmWorkerProcess pid=6499)[0;0m INFO 08-17 06:46:54 [worker.py:291] Memory profiling takes 3.11 seconds
[1;36m(VllmWorkerProcess pid=6499)[0;0m INFO 08-17 06:46:54 [worker.py:291] the current vLLM instance can use total_gpu_memory (15.77GiB) x gpu_memory_utilization (0.90) = 14.19GiB
[1;36m(VllmWorkerProcess pid=6499)[0;0m INFO 08-17 06:46:54 [worker.py:291] model weights take 11.13GiB; non_torch_memory takes 0.17GiB; PyTorch activation peak memory takes 0.62GiB; the rest of the memory reserved for KV Cache is 2.27GiB.
INFO 08-17 06:46:54 [worker.py:291] Memory profiling takes 3.23 seconds
INFO 08-17 06:46:54 [worker.py:291] the current vLLM instance can use total_gpu_memory (15.77GiB) x gpu_memory_utilization (0.90) = 14.19GiB
INFO 08-17 06:46:54 [worker.py:291] model weights take 11.13GiB; non_torch_memory takes 0.17GiB; PyTorch activation peak memory takes 0.62GiB; the rest of the memory reserved for KV Cache is 2.27GiB.
INFO 08-17 06:46:55 [executor_base.py:112] # cuda blocks: 371, # CPU blocks: 0
INFO 08-17 06:46:55 [executor_base.py:117] Maximum concurrency for 4608 tokens per request: 1.29x
INFO 08-17 06:46:55 [model_runner.py:1512] Capturing cudagraphs for decoding. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI. If out-of-memory error occurs during cudagraph capture, consider decreasing `gpu_memory_utilization` or switching to eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
[1;36m(VllmWorkerProcess pid=6499)[0;0m INFO 08-17 06:46:55 [model_runner.py:1512] Capturing cudagraphs for decoding. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI. If out-of-memory error occurs during cudagraph capture, consider decreasing `gpu_memory_utilization` or switching to eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
Capturing CUDA graph shapes:   0%|          | 0/7 [00:00<?, ?it/s]Capturing CUDA graph shapes:  14%|█▍        | 1/7 [00:00<00:05,  1.20it/s]Capturing CUDA graph shapes:  29%|██▊       | 2/7 [00:01<00:04,  1.23it/s]Capturing CUDA graph shapes:  43%|████▎     | 3/7 [00:02<00:03,  1.25it/s]Capturing CUDA graph shapes:  57%|█████▋    | 4/7 [00:03<00:02,  1.26it/s]Capturing CUDA graph shapes:  71%|███████▏  | 5/7 [00:03<00:01,  1.27it/s]Capturing CUDA graph shapes:  86%|████████▌ | 6/7 [00:04<00:00,  1.27it/s][1;36m(VllmWorkerProcess pid=6499)[0;0m INFO 08-17 06:47:00 [model_runner.py:1670] Graph capturing finished in 6 secs, took 0.39 GiB
Capturing CUDA graph shapes: 100%|██████████| 7/7 [00:05<00:00,  1.25it/s]Capturing CUDA graph shapes: 100%|██████████| 7/7 [00:05<00:00,  1.25it/s]
INFO 08-17 06:47:00 [model_runner.py:1670] Graph capturing finished in 6 secs, took 0.39 GiB
INFO 08-17 06:47:00 [llm_engine.py:428] init engine (profile, create kv cache, warmup model) took 9.27 seconds
INFO 08-17 06:47:05 [metrics.py:486] Avg prompt throughput: 100.92484 tokens/s, Avg generation throughput: 6.49224 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 9.43396%, CPU KV cache usage: 0.00000%.
INFO 08-17 06:47:11 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 7.00092 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 9.97305%, CPU KV cache usage: 0.00000%.
INFO 08-17 06:47:16 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 6.99847 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 10.51213%, CPU KV cache usage: 0.00000%.
INFO 08-17 06:47:21 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 6.99871 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 11.05121%, CPU KV cache usage: 0.00000%.
INFO 08-17 06:47:26 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 6.99929 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 11.59030%, CPU KV cache usage: 0.00000%.
INFO 08-17 06:47:31 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 6.99758 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 12.39892%, CPU KV cache usage: 0.00000%.
INFO 08-17 06:47:36 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 6.98490 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 12.93801%, CPU KV cache usage: 0.00000%.
INFO 08-17 06:47:41 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 6.98990 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 13.47709%, CPU KV cache usage: 0.00000%.
INFO 08-17 06:47:46 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 6.99294 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 14.01617%, CPU KV cache usage: 0.00000%.
INFO 08-17 06:47:51 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 6.99820 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 14.55526%, CPU KV cache usage: 0.00000%.
INFO 08-17 06:47:56 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 6.99558 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 15.36388%, CPU KV cache usage: 0.00000%.
INFO 08-17 06:48:01 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 6.99327 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 15.90296%, CPU KV cache usage: 0.00000%.
INFO 08-17 06:48:06 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 6.98756 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 16.44205%, CPU KV cache usage: 0.00000%.
INFO 08-17 06:48:11 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 6.99447 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 16.98113%, CPU KV cache usage: 0.00000%.
INFO 08-17 06:48:16 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 6.99655 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 17.52022%, CPU KV cache usage: 0.00000%.
INFO 08-17 06:48:21 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 6.99489 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 18.05930%, CPU KV cache usage: 0.00000%.
INFO 08-17 06:48:26 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 6.99080 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 18.86792%, CPU KV cache usage: 0.00000%.
INFO 08-17 06:48:31 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 6.99544 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 19.40701%, CPU KV cache usage: 0.00000%.
INFO 08-17 06:48:36 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 6.99286 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 19.94609%, CPU KV cache usage: 0.00000%.
INFO 08-17 06:48:41 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 6.98515 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 20.48518%, CPU KV cache usage: 0.00000%.
INFO 08-17 06:48:46 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 6.98823 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 21.02426%, CPU KV cache usage: 0.00000%.
INFO 08-17 06:48:51 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 6.99169 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 21.83288%, CPU KV cache usage: 0.00000%.
INFO 08-17 06:48:56 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 6.99600 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 22.37197%, CPU KV cache usage: 0.00000%.
INFO 08-17 06:49:01 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 6.99332 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 22.91105%, CPU KV cache usage: 0.00000%.
INFO 08-17 06:49:06 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 6.98363 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 23.45013%, CPU KV cache usage: 0.00000%.
INFO 08-17 06:49:11 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 6.99394 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 23.98922%, CPU KV cache usage: 0.00000%.
INFO 08-17 06:49:16 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 6.99530 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 24.79784%, CPU KV cache usage: 0.00000%.
INFO 08-17 06:49:21 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 6.99419 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 25.33693%, CPU KV cache usage: 0.00000%.
INFO 08-17 06:49:26 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 6.99492 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 25.87601%, CPU KV cache usage: 0.00000%.
INFO 08-17 06:49:31 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 6.99238 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 26.41509%, CPU KV cache usage: 0.00000%.
INFO 08-17 06:49:36 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 6.99174 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 26.95418%, CPU KV cache usage: 0.00000%.
INFO 08-17 06:49:41 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 6.99317 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 27.49326%, CPU KV cache usage: 0.00000%.
INFO 08-17 06:49:46 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 6.98691 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 28.30189%, CPU KV cache usage: 0.00000%.
INFO 08-17 06:49:51 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 6.99071 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 28.84097%, CPU KV cache usage: 0.00000%.
INFO 08-17 06:49:56 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 6.98624 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 29.38005%, CPU KV cache usage: 0.00000%.
INFO 08-17 06:50:01 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 6.98869 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 29.91914%, CPU KV cache usage: 0.00000%.
INFO 08-17 06:50:06 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 6.98065 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 30.45822%, CPU KV cache usage: 0.00000%.
INFO 08-17 06:50:11 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 6.98729 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 31.26685%, CPU KV cache usage: 0.00000%.
INFO 08-17 06:50:16 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 6.98660 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 31.80593%, CPU KV cache usage: 0.00000%.
INFO 08-17 06:50:21 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 6.98626 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 32.34501%, CPU KV cache usage: 0.00000%.
INFO 08-17 06:50:26 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 6.98367 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 32.88410%, CPU KV cache usage: 0.00000%.
INFO 08-17 06:50:31 [metrics.py:486] Avg prompt throughput: 0.00000 tokens/s, Avg generation throughput: 6.98601 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 33.42318%, CPU KV cache usage: 0.00000%.
[1;36m(VllmWorkerProcess pid=6499)[0;0m INFO 08-17 06:50:34 [multiproc_worker_utils.py:259] Worker exiting
[rank0]: Traceback (most recent call last):
[rank0]:   File "/home/ubuntu/vllm_eval/main.py", line 119, in <module>
[rank0]:     benchmark(args.model, args.prompt_len, args.gen_len, args.batch_size, args.tensor_parallelism)
[rank0]:   File "/home/ubuntu/vllm_eval/main.py", line 67, in benchmark
[rank0]:     responses = llm.generate(prompts, sampling_params)
[rank0]:                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/ubuntu/vllm/vllm/utils.py", line 1218, in inner
[rank0]:     return fn(*args, **kwargs)
[rank0]:            ^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/ubuntu/vllm/vllm/entrypoints/llm.py", line 481, in generate
[rank0]:     outputs = self._run_engine(use_tqdm=use_tqdm)
[rank0]:               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/ubuntu/vllm/vllm/entrypoints/llm.py", line 1476, in _run_engine
[rank0]:     step_outputs = self.llm_engine.step()
[rank0]:                    ^^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/ubuntu/vllm/vllm/engine/llm_engine.py", line 1393, in step
[rank0]:     outputs = self.model_executor.execute_model(
[rank0]:               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/ubuntu/vllm/vllm/executor/executor_base.py", line 299, in execute_model
[rank0]:     driver_outputs = self._driver_execute_model(execute_model_req)
[rank0]:                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/ubuntu/vllm/vllm/executor/mp_distributed_executor.py", line 144, in _driver_execute_model
[rank0]:     return self.driver_worker.execute_model(execute_model_req)
[rank0]:            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/ubuntu/vllm/vllm/worker/worker_base.py", line 420, in execute_model
[rank0]:     output = self.model_runner.execute_model(
[rank0]:              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/ubuntu/.venv/lib/python3.12/site-packages/torch/utils/_contextlib.py", line 116, in decorate_context
[rank0]:     return func(*args, **kwargs)
[rank0]:            ^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/ubuntu/vllm/vllm/worker/model_runner.py", line 1843, in execute_model
[rank0]:     hidden_or_intermediate_states = model_executable(
[rank0]:                                     ^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/ubuntu/.venv/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1751, in _wrapped_call_impl
[rank0]:     return self._call_impl(*args, **kwargs)
[rank0]:            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/ubuntu/.venv/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1762, in _call_impl
[rank0]:     return forward_call(*args, **kwargs)
[rank0]:            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/ubuntu/vllm/vllm/worker/model_runner.py", line 2173, in forward
[rank0]:     self.graph.replay()
[rank0]:   File "/home/ubuntu/.venv/lib/python3.12/site-packages/torch/cuda/graphs.py", line 88, in replay
[rank0]:     super().replay()
[rank0]: KeyboardInterrupt
/home/ubuntu/.local/share/uv/python/cpython-3.12.11-linux-x86_64-gnu/lib/python3.12/multiprocessing/resource_tracker.py:279: UserWarning: resource_tracker: There appear to be 1 leaked shared_memory objects to clean up at shutdown
  warnings.warn('resource_tracker: There appear to be %d '
[rank0]:[W817 06:50:35.508146264 ProcessGroupNCCL.cpp:1476] Warning: WARNING: destroy_process_group() was not called before program exit, which can leak resources. For more info, please see https://pytorch.org/docs/stable/distributed.html#shutdown (function operator())
