INFO 08-08 17:10:32 [__init__.py:244] Automatically detected platform cuda.
benchmarking meta-llama_Llama-2-13b-hf_prompt512_gen4096_bs1
kv cache size per request: 3.515625 GB
offloading 0.5 GB model weights
INFO 08-08 17:10:42 [config.py:823] This model supports multiple tasks: {'embed', 'classify', 'generate', 'score', 'reward'}. Defaulting to 'generate'.
INFO 08-08 17:10:42 [config.py:1946] Defaulting to use mp for distributed inference
INFO 08-08 17:10:42 [llm_engine.py:230] Initializing a V0 LLM engine (v0.9.1) with config: model='meta-llama/Llama-2-13b-hf', speculative_config=None, tokenizer='meta-llama/Llama-2-13b-hf', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config={}, tokenizer_revision=None, trust_remote_code=False, dtype=torch.float16, max_seq_len=4608, download_dir=None, load_format=LoadFormat.DUMMY, tensor_parallel_size=2, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto,  device_config=cuda, decoding_config=DecodingConfig(backend='auto', disable_fallback=False, disable_any_whitespace=False, disable_additional_properties=False, reasoning_backend=''), observability_config=ObservabilityConfig(show_hidden_metrics_for_version=None, otlp_traces_endpoint=None, collect_detailed_traces=None), seed=None, served_model_name=meta-llama/Llama-2-13b-hf, num_scheduler_steps=1, multi_step_stream_outputs=True, enable_prefix_caching=None, chunked_prefill_enabled=False, use_async_output_proc=True, pooler_config=None, compilation_config={"level":0,"debug_dump_path":"","cache_dir":"","backend":"","custom_ops":[],"splitting_ops":[],"use_inductor":true,"compile_sizes":[],"inductor_compile_config":{"enable_auto_functionalized_v2":false},"inductor_passes":{},"use_cudagraph":true,"cudagraph_num_of_warmups":0,"cudagraph_capture_sizes":[32,24,16,8,4,2,1],"cudagraph_copy_inputs":false,"full_cuda_graph":false,"max_capture_size":32,"local_cache_dir":null}, use_cached_outputs=False, 
huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...
To disable this warning, you can either:
	- Avoid using `tokenizers` before the fork if possible
	- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)
[1;36m(VllmWorkerProcess pid=26746)[0;0m INFO 08-08 17:10:42 [multiproc_worker_utils.py:226] Worker ready; awaiting tasks
[1;36m(VllmWorkerProcess pid=26746)[0;0m INFO 08-08 17:10:44 [cuda.py:275] Cannot use FlashAttention-2 backend for Volta and Turing GPUs.
[1;36m(VllmWorkerProcess pid=26746)[0;0m INFO 08-08 17:10:44 [cuda.py:324] Using XFormers backend.
INFO 08-08 17:10:44 [cuda.py:275] Cannot use FlashAttention-2 backend for Volta and Turing GPUs.
INFO 08-08 17:10:44 [cuda.py:324] Using XFormers backend.
[1;36m(VllmWorkerProcess pid=26746)[0;0m INFO 08-08 17:10:44 [utils.py:1126] Found nccl from library libnccl.so.2
INFO 08-08 17:10:44 [utils.py:1126] Found nccl from library libnccl.so.2
INFO 08-08 17:10:45 [pynccl.py:70] vLLM is using nccl==2.26.2
[1;36m(VllmWorkerProcess pid=26746)[0;0m INFO 08-08 17:10:45 [pynccl.py:70] vLLM is using nccl==2.26.2
INFO 08-08 17:10:45 [custom_all_reduce_utils.py:246] reading GPU P2P access cache from /home/ubuntu/.cache/vllm/gpu_p2p_access_cache_for_0,1.json
[1;36m(VllmWorkerProcess pid=26746)[0;0m INFO 08-08 17:10:45 [custom_all_reduce_utils.py:246] reading GPU P2P access cache from /home/ubuntu/.cache/vllm/gpu_p2p_access_cache_for_0,1.json
WARNING 08-08 17:10:45 [custom_all_reduce.py:147] Custom allreduce is disabled because your platform lacks GPU P2P capability or P2P test failed. To silence this warning, specify disable_custom_all_reduce=True explicitly.
[1;36m(VllmWorkerProcess pid=26746)[0;0m WARNING 08-08 17:10:45 [custom_all_reduce.py:147] Custom allreduce is disabled because your platform lacks GPU P2P capability or P2P test failed. To silence this warning, specify disable_custom_all_reduce=True explicitly.
INFO 08-08 17:10:45 [shm_broadcast.py:289] vLLM message queue communication handle: Handle(local_reader_ranks=[1], buffer_handle=(1, 4194304, 6, 'psm_f6b0e7d8'), local_subscribe_addr='ipc:///tmp/4e8cb9fe-ba86-48f1-936e-c22649dc11f2', remote_subscribe_addr=None, remote_addr_ipv6=False)
INFO 08-08 17:10:45 [parallel_state.py:1065] rank 0 in world size 2 is assigned as DP rank 0, PP rank 0, TP rank 0, EP rank 0
[1;36m(VllmWorkerProcess pid=26746)[0;0m INFO 08-08 17:10:45 [parallel_state.py:1065] rank 1 in world size 2 is assigned as DP rank 0, PP rank 0, TP rank 1, EP rank 1
INFO 08-08 17:10:45 [model_runner.py:1171] Starting to load model meta-llama/Llama-2-13b-hf...
[1;36m(VllmWorkerProcess pid=26746)[0;0m INFO 08-08 17:10:45 [model_runner.py:1171] Starting to load model meta-llama/Llama-2-13b-hf...
INFO 08-08 17:10:48 [model_runner.py:1203] Model loading took 11.7296 GiB and 2.733084 seconds
[1;36m(VllmWorkerProcess pid=26746)[0;0m INFO 08-08 17:10:48 [model_runner.py:1203] Model loading took 11.7296 GiB and 2.745396 seconds
[1;36m(VllmWorkerProcess pid=26746)[0;0m INFO 08-08 17:10:51 [worker.py:294] Memory profiling takes 3.01 seconds
[1;36m(VllmWorkerProcess pid=26746)[0;0m INFO 08-08 17:10:51 [worker.py:294] the current vLLM instance can use total_gpu_memory (15.77GiB) x gpu_memory_utilization (0.90) = 14.19GiB
[1;36m(VllmWorkerProcess pid=26746)[0;0m INFO 08-08 17:10:51 [worker.py:294] model weights take 11.73GiB; non_torch_memory takes 0.17GiB; PyTorch activation peak memory takes 0.57GiB; the rest of the memory reserved for KV Cache is 1.72GiB.
INFO 08-08 17:10:51 [worker.py:294] Memory profiling takes 3.11 seconds
INFO 08-08 17:10:51 [worker.py:294] the current vLLM instance can use total_gpu_memory (15.77GiB) x gpu_memory_utilization (0.90) = 14.19GiB
INFO 08-08 17:10:51 [worker.py:294] model weights take 11.73GiB; non_torch_memory takes 0.17GiB; PyTorch activation peak memory takes 0.57GiB; the rest of the memory reserved for KV Cache is 1.72GiB.
INFO 08-08 17:10:52 [executor_base.py:113] # cuda blocks: 281, # CPU blocks: 0
INFO 08-08 17:10:52 [executor_base.py:118] Maximum concurrency for 4608 tokens per request: 0.98x
[1;36m(VllmWorkerProcess pid=26746)[0;0m ERROR 08-08 17:10:52 [multiproc_worker_utils.py:239] Exception in worker VllmWorkerProcess while processing method initialize_cache.
[1;36m(VllmWorkerProcess pid=26746)[0;0m ERROR 08-08 17:10:52 [multiproc_worker_utils.py:239] Traceback (most recent call last):
[1;36m(VllmWorkerProcess pid=26746)[0;0m ERROR 08-08 17:10:52 [multiproc_worker_utils.py:239]   File "/home/ubuntu/miniconda3/envs/vllm/lib/python3.12/site-packages/vllm/executor/multiproc_worker_utils.py", line 233, in _run_worker_process
[1;36m(VllmWorkerProcess pid=26746)[0;0m ERROR 08-08 17:10:52 [multiproc_worker_utils.py:239]     output = run_method(worker, method, args, kwargs)
[1;36m(VllmWorkerProcess pid=26746)[0;0m ERROR 08-08 17:10:52 [multiproc_worker_utils.py:239]              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[1;36m(VllmWorkerProcess pid=26746)[0;0m ERROR 08-08 17:10:52 [multiproc_worker_utils.py:239]   File "/home/ubuntu/miniconda3/envs/vllm/lib/python3.12/site-packages/vllm/utils.py", line 2671, in run_method
[1;36m(VllmWorkerProcess pid=26746)[0;0m ERROR 08-08 17:10:52 [multiproc_worker_utils.py:239]     return func(*args, **kwargs)
[1;36m(VllmWorkerProcess pid=26746)[0;0m ERROR 08-08 17:10:52 [multiproc_worker_utils.py:239]            ^^^^^^^^^^^^^^^^^^^^^
[1;36m(VllmWorkerProcess pid=26746)[0;0m ERROR 08-08 17:10:52 [multiproc_worker_utils.py:239]   File "/home/ubuntu/miniconda3/envs/vllm/lib/python3.12/site-packages/vllm/worker/worker.py", line 318, in initialize_cache
[1;36m(VllmWorkerProcess pid=26746)[0;0m ERROR 08-08 17:10:52 [multiproc_worker_utils.py:239]     raise_if_cache_size_invalid(
[1;36m(VllmWorkerProcess pid=26746)[0;0m ERROR 08-08 17:10:52 [multiproc_worker_utils.py:239]   File "/home/ubuntu/miniconda3/envs/vllm/lib/python3.12/site-packages/vllm/worker/worker.py", line 572, in raise_if_cache_size_invalid
[1;36m(VllmWorkerProcess pid=26746)[0;0m ERROR 08-08 17:10:52 [multiproc_worker_utils.py:239]     raise ValueError(
[1;36m(VllmWorkerProcess pid=26746)[0;0m ERROR 08-08 17:10:52 [multiproc_worker_utils.py:239] ValueError: The model's max seq len (4608) is larger than the maximum number of tokens that can be stored in KV cache (4496). Try increasing `gpu_memory_utilization` or decreasing `max_model_len` when initializing the engine.
[rank0]: Traceback (most recent call last):
[rank0]:   File "/home/ubuntu/vllm_eval/main.py", line 119, in <module>
[rank0]:     benchmark(args.model, args.prompt_len, args.gen_len, args.batch_size, args.tensor_parallelism)
[rank0]:   File "/home/ubuntu/vllm_eval/main.py", line 46, in benchmark
[rank0]:     llm = LLM(model=model_name,
[rank0]:           ^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/ubuntu/miniconda3/envs/vllm/lib/python3.12/site-packages/vllm/entrypoints/llm.py", line 243, in __init__
[rank0]:     self.llm_engine = LLMEngine.from_engine_args(
[rank0]:                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/ubuntu/miniconda3/envs/vllm/lib/python3.12/site-packages/vllm/engine/llm_engine.py", line 501, in from_engine_args
[rank0]:     return engine_cls.from_vllm_config(
[rank0]:            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/ubuntu/miniconda3/envs/vllm/lib/python3.12/site-packages/vllm/engine/llm_engine.py", line 477, in from_vllm_config
[rank0]:     return cls(
[rank0]:            ^^^^
[rank0]:   File "/home/ubuntu/miniconda3/envs/vllm/lib/python3.12/site-packages/vllm/engine/llm_engine.py", line 268, in __init__
[rank0]:     self._initialize_kv_caches()
[rank0]:   File "/home/ubuntu/miniconda3/envs/vllm/lib/python3.12/site-packages/vllm/engine/llm_engine.py", line 426, in _initialize_kv_caches
[rank0]:     self.model_executor.initialize_cache(num_gpu_blocks, num_cpu_blocks)
[rank0]:   File "/home/ubuntu/miniconda3/envs/vllm/lib/python3.12/site-packages/vllm/executor/executor_base.py", line 124, in initialize_cache
[rank0]:     self.collective_rpc("initialize_cache",
[rank0]:   File "/home/ubuntu/miniconda3/envs/vllm/lib/python3.12/site-packages/vllm/executor/executor_base.py", line 332, in collective_rpc
[rank0]:     return self._run_workers(method, *args, **(kwargs or {}))
[rank0]:            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/ubuntu/miniconda3/envs/vllm/lib/python3.12/site-packages/vllm/executor/mp_distributed_executor.py", line 186, in _run_workers
[rank0]:     driver_worker_output = run_method(self.driver_worker, sent_method,
[rank0]:                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/ubuntu/miniconda3/envs/vllm/lib/python3.12/site-packages/vllm/utils.py", line 2671, in run_method
[rank0]:     return func(*args, **kwargs)
[rank0]:            ^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/ubuntu/miniconda3/envs/vllm/lib/python3.12/site-packages/vllm/worker/worker.py", line 318, in initialize_cache
[rank0]:     raise_if_cache_size_invalid(
[rank0]:   File "/home/ubuntu/miniconda3/envs/vllm/lib/python3.12/site-packages/vllm/worker/worker.py", line 572, in raise_if_cache_size_invalid
[rank0]:     raise ValueError(
[rank0]: ValueError: The model's max seq len (4608) is larger than the maximum number of tokens that can be stored in KV cache (4496). Try increasing `gpu_memory_utilization` or decreasing `max_model_len` when initializing the engine.
/home/ubuntu/miniconda3/envs/vllm/lib/python3.12/multiprocessing/resource_tracker.py:279: UserWarning: resource_tracker: There appear to be 1 leaked shared_memory objects to clean up at shutdown
  warnings.warn('resource_tracker: There appear to be %d '
[rank0]:[W808 17:10:52.824068672 ProcessGroupNCCL.cpp:1476] Warning: WARNING: destroy_process_group() was not called before program exit, which can leak resources. For more info, please see https://pytorch.org/docs/stable/distributed.html#shutdown (function operator())
