INFO 08-01 03:05:59 [__init__.py:244] Automatically detected platform cuda.
benchmarking facebook_opt-6.7b_prompt1024_gen8192_bs1
kv cache size per request: 4.5 GB
offloading 0 GB model weights
INFO 08-01 03:06:13 [config.py:823] This model supports multiple tasks: {'classify', 'reward', 'embed', 'score', 'generate'}. Defaulting to 'generate'.
INFO 08-01 03:06:14 [config.py:1946] Defaulting to use mp for distributed inference
INFO 08-01 03:06:14 [llm_engine.py:230] Initializing a V0 LLM engine (v0.9.1) with config: model='facebook/opt-6.7b', speculative_config=None, tokenizer='facebook/opt-6.7b', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config={}, tokenizer_revision=None, trust_remote_code=False, dtype=torch.float16, max_seq_len=9216, download_dir=None, load_format=LoadFormat.DUMMY, tensor_parallel_size=2, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto,  device_config=cuda, decoding_config=DecodingConfig(backend='auto', disable_fallback=False, disable_any_whitespace=False, disable_additional_properties=False, reasoning_backend=''), observability_config=ObservabilityConfig(show_hidden_metrics_for_version=None, otlp_traces_endpoint=None, collect_detailed_traces=None), seed=None, served_model_name=facebook/opt-6.7b, num_scheduler_steps=1, multi_step_stream_outputs=True, enable_prefix_caching=None, chunked_prefill_enabled=False, use_async_output_proc=True, pooler_config=None, compilation_config={"level":0,"debug_dump_path":"","cache_dir":"","backend":"","custom_ops":[],"splitting_ops":[],"use_inductor":true,"compile_sizes":[],"inductor_compile_config":{"enable_auto_functionalized_v2":false},"inductor_passes":{},"use_cudagraph":true,"cudagraph_num_of_warmups":0,"cudagraph_capture_sizes":[32,24,16,8,4,2,1],"cudagraph_copy_inputs":false,"full_cuda_graph":false,"max_capture_size":32,"local_cache_dir":null}, use_cached_outputs=False, 
huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...
To disable this warning, you can either:
	- Avoid using `tokenizers` before the fork if possible
	- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)
[1;36m(VllmWorkerProcess pid=71729)[0;0m INFO 08-01 03:06:17 [multiproc_worker_utils.py:226] Worker ready; awaiting tasks
[1;36m(VllmWorkerProcess pid=71729)[0;0m INFO 08-01 03:06:18 [cuda.py:275] Cannot use FlashAttention-2 backend for Volta and Turing GPUs.
[1;36m(VllmWorkerProcess pid=71729)[0;0m INFO 08-01 03:06:18 [cuda.py:324] Using XFormers backend.
INFO 08-01 03:06:18 [cuda.py:275] Cannot use FlashAttention-2 backend for Volta and Turing GPUs.
INFO 08-01 03:06:18 [cuda.py:324] Using XFormers backend.
[1;36m(VllmWorkerProcess pid=71729)[0;0m INFO 08-01 03:06:19 [utils.py:1126] Found nccl from library libnccl.so.2
INFO 08-01 03:06:19 [utils.py:1126] Found nccl from library libnccl.so.2
[1;36m(VllmWorkerProcess pid=71729)[0;0m INFO 08-01 03:06:19 [pynccl.py:70] vLLM is using nccl==2.26.2
INFO 08-01 03:06:19 [pynccl.py:70] vLLM is using nccl==2.26.2
INFO 08-01 03:06:19 [custom_all_reduce_utils.py:246] reading GPU P2P access cache from /home/ubuntu/.cache/vllm/gpu_p2p_access_cache_for_0,1.json
[1;36m(VllmWorkerProcess pid=71729)[0;0m INFO 08-01 03:06:19 [custom_all_reduce_utils.py:246] reading GPU P2P access cache from /home/ubuntu/.cache/vllm/gpu_p2p_access_cache_for_0,1.json
WARNING 08-01 03:06:19 [custom_all_reduce.py:147] Custom allreduce is disabled because your platform lacks GPU P2P capability or P2P test failed. To silence this warning, specify disable_custom_all_reduce=True explicitly.
[1;36m(VllmWorkerProcess pid=71729)[0;0m WARNING 08-01 03:06:19 [custom_all_reduce.py:147] Custom allreduce is disabled because your platform lacks GPU P2P capability or P2P test failed. To silence this warning, specify disable_custom_all_reduce=True explicitly.
INFO 08-01 03:06:19 [shm_broadcast.py:289] vLLM message queue communication handle: Handle(local_reader_ranks=[1], buffer_handle=(1, 4194304, 6, 'psm_f56f8bfe'), local_subscribe_addr='ipc:///tmp/18e86424-9a62-4d79-9cc6-6a7761421451', remote_subscribe_addr=None, remote_addr_ipv6=False)
INFO 08-01 03:06:19 [parallel_state.py:1065] rank 0 in world size 2 is assigned as DP rank 0, PP rank 0, TP rank 0, EP rank 0
[1;36m(VllmWorkerProcess pid=71729)[0;0m INFO 08-01 03:06:19 [parallel_state.py:1065] rank 1 in world size 2 is assigned as DP rank 0, PP rank 0, TP rank 1, EP rank 1
INFO 08-01 03:06:19 [model_runner.py:1171] Starting to load model facebook/opt-6.7b...
[1;36m(VllmWorkerProcess pid=71729)[0;0m INFO 08-01 03:06:19 [model_runner.py:1171] Starting to load model facebook/opt-6.7b...
[1;36m(VllmWorkerProcess pid=71729)[0;0m INFO 08-01 03:06:20 [model_runner.py:1203] Model loading took 6.2647 GiB and 0.075526 seconds
INFO 08-01 03:06:20 [model_runner.py:1203] Model loading took 6.2647 GiB and 0.076444 seconds
[1;36m(VllmWorkerProcess pid=71729)[0;0m INFO 08-01 03:06:24 [worker.py:294] Memory profiling takes 3.28 seconds
[1;36m(VllmWorkerProcess pid=71729)[0;0m INFO 08-01 03:06:24 [worker.py:294] the current vLLM instance can use total_gpu_memory (15.77GiB) x gpu_memory_utilization (0.90) = 14.19GiB
[1;36m(VllmWorkerProcess pid=71729)[0;0m INFO 08-01 03:06:24 [worker.py:294] model weights take 6.26GiB; non_torch_memory takes 0.16GiB; PyTorch activation peak memory takes 0.57GiB; the rest of the memory reserved for KV Cache is 7.19GiB.
INFO 08-01 03:06:24 [worker.py:294] Memory profiling takes 3.40 seconds
INFO 08-01 03:06:24 [worker.py:294] the current vLLM instance can use total_gpu_memory (15.77GiB) x gpu_memory_utilization (0.90) = 14.19GiB
INFO 08-01 03:06:24 [worker.py:294] model weights take 6.26GiB; non_torch_memory takes 0.16GiB; PyTorch activation peak memory takes 0.57GiB; the rest of the memory reserved for KV Cache is 7.19GiB.
INFO 08-01 03:06:24 [executor_base.py:113] # cuda blocks: 1840, # CPU blocks: 12800
INFO 08-01 03:06:24 [executor_base.py:118] Maximum concurrency for 9216 tokens per request: 3.19x
INFO 08-01 03:06:57 [model_runner.py:1513] Capturing cudagraphs for decoding. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI. If out-of-memory error occurs during cudagraph capture, consider decreasing `gpu_memory_utilization` or switching to eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
[1;36m(VllmWorkerProcess pid=71729)[0;0m INFO 08-01 03:06:57 [model_runner.py:1513] Capturing cudagraphs for decoding. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI. If out-of-memory error occurs during cudagraph capture, consider decreasing `gpu_memory_utilization` or switching to eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
Capturing CUDA graph shapes:   0%|          | 0/7 [00:00<?, ?it/s]Capturing CUDA graph shapes:  14%|█▍        | 1/7 [00:00<00:03,  1.56it/s]Capturing CUDA graph shapes:  29%|██▊       | 2/7 [00:01<00:02,  1.75it/s]Capturing CUDA graph shapes:  43%|████▎     | 3/7 [00:01<00:02,  1.84it/s]Capturing CUDA graph shapes:  57%|█████▋    | 4/7 [00:02<00:01,  1.89it/s]Capturing CUDA graph shapes:  71%|███████▏  | 5/7 [00:02<00:01,  1.90it/s]Capturing CUDA graph shapes:  86%|████████▌ | 6/7 [00:03<00:00,  1.94it/s][1;36m(VllmWorkerProcess pid=71729)[0;0m INFO 08-01 03:07:01 [model_runner.py:1671] Graph capturing finished in 4 secs, took 0.08 GiB
Capturing CUDA graph shapes: 100%|██████████| 7/7 [00:03<00:00,  1.82it/s]Capturing CUDA graph shapes: 100%|██████████| 7/7 [00:03<00:00,  1.83it/s]
INFO 08-01 03:07:01 [model_runner.py:1671] Graph capturing finished in 4 secs, took 0.08 GiB
INFO 08-01 03:07:01 [llm_engine.py:428] init engine (profile, create kv cache, warmup model) took 41.11 seconds
INFO 08-01 03:07:06 [metrics.py:417] Avg prompt throughput: 204.5 tokens/s, Avg generation throughput: 59.1 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 4.5%, CPU KV cache usage: 0.0%.
INFO 08-01 03:07:11 [metrics.py:417] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 62.5 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 5.6%, CPU KV cache usage: 0.0%.
INFO 08-01 03:07:16 [metrics.py:417] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 62.4 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 6.6%, CPU KV cache usage: 0.0%.
INFO 08-01 03:07:21 [metrics.py:417] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 62.2 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 7.7%, CPU KV cache usage: 0.0%.
INFO 08-01 03:07:26 [metrics.py:417] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 61.9 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 8.8%, CPU KV cache usage: 0.0%.
INFO 08-01 03:07:31 [metrics.py:417] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 61.6 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 9.8%, CPU KV cache usage: 0.0%.
INFO 08-01 03:07:36 [metrics.py:417] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 61.1 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 10.8%, CPU KV cache usage: 0.0%.
INFO 08-01 03:07:41 [metrics.py:417] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 60.8 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 11.8%, CPU KV cache usage: 0.0%.
INFO 08-01 03:07:46 [metrics.py:417] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 60.4 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 12.9%, CPU KV cache usage: 0.0%.
INFO 08-01 03:07:51 [metrics.py:417] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 60.1 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 13.9%, CPU KV cache usage: 0.0%.
INFO 08-01 03:07:56 [metrics.py:417] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 59.6 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 14.9%, CPU KV cache usage: 0.0%.
INFO 08-01 03:08:01 [metrics.py:417] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 59.3 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 15.9%, CPU KV cache usage: 0.0%.
INFO 08-01 03:08:06 [metrics.py:417] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 59.0 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 17.0%, CPU KV cache usage: 0.0%.
INFO 08-01 03:08:11 [metrics.py:417] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 58.7 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 17.9%, CPU KV cache usage: 0.0%.
INFO 08-01 03:08:16 [metrics.py:417] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 58.3 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 18.9%, CPU KV cache usage: 0.0%.
INFO 08-01 03:08:21 [metrics.py:417] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 58.0 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 19.9%, CPU KV cache usage: 0.0%.
INFO 08-01 03:08:26 [metrics.py:417] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 57.8 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 20.9%, CPU KV cache usage: 0.0%.
INFO 08-01 03:08:31 [metrics.py:417] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 57.5 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 21.9%, CPU KV cache usage: 0.0%.
INFO 08-01 03:08:36 [metrics.py:417] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 57.1 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 22.8%, CPU KV cache usage: 0.0%.
INFO 08-01 03:08:41 [metrics.py:417] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 56.8 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 23.8%, CPU KV cache usage: 0.0%.
INFO 08-01 03:08:46 [metrics.py:417] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 56.5 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 24.8%, CPU KV cache usage: 0.0%.
INFO 08-01 03:08:51 [metrics.py:417] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 56.3 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 25.8%, CPU KV cache usage: 0.0%.
INFO 08-01 03:08:56 [metrics.py:417] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 56.0 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 26.7%, CPU KV cache usage: 0.0%.
INFO 08-01 03:09:01 [metrics.py:417] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 55.8 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 27.7%, CPU KV cache usage: 0.0%.
INFO 08-01 03:09:06 [metrics.py:417] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 48.0 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 28.5%, CPU KV cache usage: 0.0%.
INFO 08-01 03:09:11 [metrics.py:417] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 46.5 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 29.2%, CPU KV cache usage: 0.0%.
INFO 08-01 03:09:16 [metrics.py:417] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 46.4 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 30.1%, CPU KV cache usage: 0.0%.
INFO 08-01 03:09:21 [metrics.py:417] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 46.3 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 30.8%, CPU KV cache usage: 0.0%.
INFO 08-01 03:09:25 [multiproc_worker_utils.py:138] Terminating local vLLM worker processes
[1;36m(VllmWorkerProcess pid=71729)[0;0m INFO 08-01 03:09:25 [multiproc_worker_utils.py:260] Worker exiting
/home/ubuntu/miniconda3/envs/vllm/lib/python3.12/multiprocessing/resource_tracker.py:279: UserWarning: resource_tracker: There appear to be 1 leaked shared_memory objects to clean up at shutdown
  warnings.warn('resource_tracker: There appear to be %d '
[rank0]:[W801 03:09:34.224994374 ProcessGroupNCCL.cpp:1476] Warning: WARNING: destroy_process_group() was not called before program exit, which can leak resources. For more info, please see https://pytorch.org/docs/stable/distributed.html#shutdown (function operator())
